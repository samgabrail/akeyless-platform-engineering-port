apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{APP_NAME}}
  namespace: {{NAMESPACE}}
  annotations:
    akeyless.io/inject-secrets: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{APP_NAME}}
  template:
    metadata:
      labels:
        app: {{APP_NAME}}
      annotations:
        akeyless.io/inject-secrets: "true"
        akeyless.io/dynamic-secret-name: "{{AKEYLESS_MYSQL_SECRET_NAME}}_dynamic"
        akeyless.io/dynamic-secret-file-name: "/secrets/db-creds.json"
        akeyless.io/dynamic-secret-ttl: "1h"
    spec:
      volumes:
        - name: secrets-volume
          emptyDir: {}
      containers:
        - name: wordpress
          image: wordpress:latest
          volumeMounts:
            - name: secrets-volume
              mountPath: /secrets
              readOnly: true
          env:
            - name: WORDPRESS_DB_HOST
              value: mysql-{{APP_NAME}}
            - name: WORDPRESS_DB_NAME
              value: {{DB_NAME}}
          command: ["/bin/bash", "-c"]
          args:
            - |
              function update_credentials() {
                export WORDPRESS_DB_USER=$(jq -r .username /secrets/db-creds.json)
                export WORDPRESS_DB_PASSWORD=$(jq -r .password /secrets/db-creds.json)
                echo "Credentials updated at $(date)"
              }

              update_credentials

              # Start WordPress in the background
              docker-entrypoint.sh apache2-foreground &
              WP_PID=$!

              # Watch for changes and update credentials
              while true; do
                inotifywait -e modify /secrets/db-creds.json
                update_credentials
                # Here you would typically reload your application
                # For WordPress, you might need to restart the process
                kill -HUP $WP_PID
              done
        - name: secret-watcher
          image: busybox
          volumeMounts:
            - name: secrets-volume
              mountPath: /secrets
              readOnly: true
          command: ["/bin/sh", "-c"]
          args:
            - |
              while true; do
                current_sum=$(md5sum /secrets/db-creds.json)
                sleep 60
                new_sum=$(md5sum /secrets/db-creds.json)
                if [ "$current_sum" != "$new_sum" ]; then
                  echo "Secret changed, touching file to trigger inotify"
                  touch /secrets/db-creds.json
                fi
              done
