name: Deploy WordPress with ArgoCD and Akeyless

on:
  workflow_dispatch:
    inputs:
      app_name:
        required: true
        type: string
        default: "wordpress"
      namespace:
        required: false
        type: string
        default: "wordpress"
      db_name:
        required: true
        type: string
        default: "wordpress"
      akeyless_mysql_secret_name:
        required: true
        type: string
        default: "/demos/mysql_root_password"
      repo_name:
        required: true
        type: string
        default: "wordpress-app-demo"
      # port_payload:
      #   required: true
      #   type: string

env:
  ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
  AKEYLESS_ACCESS_ID: ${{ secrets.AKEYLESS_ACCESS_ID }}
  AKEYLESS_ACCESS_SECRET: ${{ secrets.AKEYLESS_ACCESS_SECRET }}
  PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:
  deploy-wordpress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install and verify Akeyless CLI
        run: |
          curl -o akeyless https://akeyless-cli.s3.us-east-2.amazonaws.com/cli/latest/production/cli-linux-amd64
          sudo chmod +x akeyless
          sudo mv akeyless /usr/local/bin
          which akeyless
          akeyless --version

      - name: Create new repository
        uses: actions/github-script@v6
        with:
          github-token: ${{ env.PERSONAL_ACCESS_TOKEN }}
          script: |
            await github.rest.repos.createForAuthenticatedUser({
              name: '${{ github.event.inputs.repo_name }}',
              private: true
            })

      - name: Prepare and push manifests
        run: |
          git config --global user.email "info@tekanaid.com"
          git config --global user.name "TeKanAid Automation"
          git clone https://x-access-token:${{ env.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository_owner }}/${{ github.event.inputs.repo_name }}.git
          cd ${{ github.event.inputs.repo_name }}
          
          # Copy and modify manifest files
          cp -r ../k8s-manifests/* .
          sed -i 's/{{APP_NAME}}/${{ github.event.inputs.app_name }}/g' *.yaml
          sed -i 's/{{NAMESPACE}}/${{ github.event.inputs.namespace }}/g' *.yaml
          sed -i 's/{{DB_NAME}}/${{ github.event.inputs.db_name }}/g' *.yaml
          sed -i 's#{{AKEYLESS_MYSQL_SECRET_NAME}}#${{ github.event.inputs.akeyless_mysql_secret_name }}#g' *.yaml
          
          git add .
          git commit -m "Add WordPress and MySQL manifests with Akeyless integration"
          git push

      - name: Install Argo CD CLI
        run: |
          sudo curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo chmod +x /usr/local/bin/argocd
    
      - name: Login to Argo CD
        run: argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USER }} --password ${{ secrets.ARGOCD_PASS }} --grpc-web --insecure
    
      - name: Register Repository in Argo CD
        run: argocd repo add https://github.com/${{ github.repository_owner }}/${{ github.event.inputs.repo_name }}.git --username ${{ github.repository_owner }} --password ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Create ArgoCD Application
        run: |
          argocd app create ${{ github.event.inputs.app_name }} \
            --repo https://github.com/${{ github.repository_owner }}/${{ github.event.inputs.repo_name }}.git \
            --path . \
            --dest-server https://kubernetes.default.svc \
            --dest-namespace ${{ github.event.inputs.namespace }} \
            --project default \
            --sync-policy automated \
            --sync-option CreateNamespace=true \
            --upsert \
            --grpc-web

      - name: Configure Akeyless Dynamic Secret
        run: |
          akeyless configure --access-id "$AKEYLESS_ACCESS_ID" --access-key "$AKEYLESS_ACCESS_SECRET"
          akeyless create-dynamic-secret \
            --name "${{ github.event.inputs.akeyless_mysql_secret_name }}_dynamic" \
            --producer-type mysql \
            --mysql-host "mysql-${{ github.event.inputs.app_name }}.${{ github.event.inputs.namespace }}.svc.cluster.local" \
            --mysql-port 3306 \
            --mysql-username "root" \
            --mysql-password "{{ .Secrets.${{ github.event.inputs.akeyless_mysql_secret_name }}.password }}" \
            --db-name "${{ github.event.inputs.db_name }}"

      - name: Update WordPress deployment for dynamic secret
        run: |
          cd ${{ github.event.inputs.repo_name }}
          sed -i 's/${{ github.event.inputs.akeyless_mysql_secret_name }}/${{ github.event.inputs.akeyless_mysql_secret_name }}_dynamic/g' wordpress-deployment.yaml
          git add wordpress-deployment.yaml
          git commit -m "Update WordPress deployment to use dynamic secret"
          git push

      - name: Trigger ArgoCD sync
        run: |
          argocd app sync ${{ github.event.inputs.app_name }} \
            --server ${{ env.ARGOCD_SERVER }} \
            --auth-token ${{ env.ARGOCD_AUTH_TOKEN }}

      # - name: Update Port
      #   uses: port-labs/port-github-action@v1
      #   with:
      #     identifier: ${{ github.event.inputs.app_name }}
      #     title: ${{ github.event.inputs.app_name }}
      #     blueprint: service
      #     properties: |
      #       {
      #         "name": "${{ github.event.inputs.app_name }}",
      #         "namespace": "${{ github.event.inputs.namespace }}",
      #         "database": "${{ github.event.inputs.db_name }}",
      #         "akeylessMysqlSecret": "${{ github.event.inputs.akeyless_mysql_secret_name }}_dynamic",
      #         "repository": "${{ github.event.inputs.repo_name }}"
      #       }
      #     relations: {}
      #     clientId: ${{ secrets.PORT_CLIENT_ID }}
      #     clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
      #     baseUrl: https://api.getport.io
      #     runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
